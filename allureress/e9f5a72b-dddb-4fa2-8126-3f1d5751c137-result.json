{"name": "test_getting_users_list", "status": "broken", "statusDetails": {"message": "pydantic.error_wrappers.ValidationError: 1 validation error for User\nid\n  id > 5, Слишком длинное id (type=value_error)", "trace": "get_users = <Response [200]>, calculate = <function calculate.<locals>.<lambda> at 0x000002317D31F790>, make_number = None\n\n    def test_getting_users_list(get_users, calculate, make_number):\n        \"\"\"\n        Это пример комментария;\n        С помощью данного теста валидируем получаемые данные;\n        :param get_users: C помощью фикстуры получаем JSON;\n        :param calculate: Фикстура, которая возвращает функцию;\n        :param make_number: Фикстура в которой используется елда (Часть это фикстуры сработает до теста, а часть после);\n        \"\"\"\n        test_obj = Response(get_users)\n>       test_obj.assert_status_code(200).validate_pydantic(User)\n\ntests\\users\\test_users.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\baseclasses\\response.py:14: in validate_pydantic\n    schema.parse_obj(i)\npydantic\\main.py:521: in pydantic.main.BaseModel.parse_obj\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n>   ???\nE   pydantic.error_wrappers.ValidationError: 1 validation error for User\nE   id\nE     id > 5, Слишком длинное id (type=value_error)\n\npydantic\\main.py:341: ValidationError"}, "description": "\n    Это пример комментария;\n    С помощью данного теста валидируем получаемые данные;\n    :param get_users: C помощью фикстуры получаем JSON;\n    :param calculate: Фикстура, которая возвращает функцию;\n    :param make_number: Фикстура в которой используется елда (Часть это фикстуры сработает до теста, а часть после);\n    ", "start": 1657449207975, "stop": 1657449207976, "uuid": "d861a84d-be51-4903-bea0-740f30d950ee", "historyId": "a8cd091c167665d3ed0d6c85ad20edfc", "testCaseId": "f3a35b35911a2442325e664a2ed974e0", "fullName": "tests.users.test_users#test_getting_users_list", "labels": [{"name": "parentSuite", "value": "tests.users"}, {"name": "suite", "value": "test_users"}, {"name": "host", "value": "DESKTOP-CLEQORT"}, {"name": "thread", "value": "5488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.users.test_users"}]}